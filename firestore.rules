rules_version = '2';
service cloud.firestore {match /databases/{database}/documents 
{
  // Rule for the 'users' collection
match /users/{userId} {
  allow  update: if request.auth != null && request.auth.uid == userId;
  allow read,create: if request.auth != null;
}

// Rule for 'business_info' collection
match /business_info/{userId} {
  allow create: if request.auth != null && request.auth.uid == userId;
  allow read, update: if request.auth != null && request.auth.uid == userId;
}
// Rule for the 'itemGroups' collection
match /itemGroups/{itemGroupId} {
  allow read, write: if request.auth != null;
}

// Rule for the 'items' collection
match /items/{itemId} {
  allow read, write: if request.auth != null;
}

// Rule for 'sales' collection (REMOVED role-based access)
match /sales/{saleId} {
  allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
  allow update, delete: if request.auth != null;
  // Any authenticated user can now read sales.
  allow read: if request.auth != null;
}

// Rule for 'salesReturns' collection
match /salesReturns/{returnId} {
    allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    allow read : if true;
}

// Rule for 'purchases' collection (REMOVED role-based access)
match /purchases/{purchaseId} {
  allow create: if request.auth != null ;
  allow update, delete: if request.auth != null ;
  // Any authenticated user can now read purchases.
  allow read: if request.auth != null;
}

// Rule for 'purchaseReturns' collection
match /purchaseReturns/{returnId} {
  allow read, update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
  allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
}

// This rule is for a different data structure and can be kept if needed
match /artifacts/{appId}/users/{userId}/{collectionId}/{document=**} {
  allow read, write: if request.auth != null && request.auth.uid == userId;
}
match /permissions/{role} {
  // Allows any signed-in user to read the permission documents.
  allow read: if request.auth != null;
  
  // Explicitly denies any client-side writes to prevent tampering.
  allow write,update,delete : if request.auth != null;
}
match /settings/sales-settings {
  allow read, write: if request.auth != null;
}
match /settings/purchase-settings {
  allow read, write: if request.auth != null;
}
  match /counters/{counterId} {
  // Any authenticated user can read or write (create, update, delete).
  allow read, write: if request.auth != null;
}
match /counter/{counterId} {
  // Any authenticated user can read or write (create, update, delete).
  allow read, write: if request.auth != null;
}
match /attendance/{document=**} {
      allow read, write: if true; // Adjust based on your auth setup
    }
}}